import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 30
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "com.idevel.dailyinspection"
        minSdkVersion 19
        targetSdkVersion 30

        versionCode 1
        versionName "1.0.0"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
    }
    signingConfigs {
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            v1SigningEnabled true
            v2SigningEnabled true

            storeFile file("../keystore/volunteer_keystore")
            storePassword "volunteer"
            keyAlias "jjbae"
            keyPassword "volunteer"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
    }

    externalNativeBuild {
      ndkBuild {
          path 'src/main/jni/Android.mk'
      }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def df = new SimpleDateFormat("yyMMdd")
            df.setTimeZone(TimeZone.getDefault())
            def newName = "idevel_dailyinspection${defaultConfig.versionName}_${buildType.name}_${df.format(new Date())}.apk"
            output.outputFileName = new File("./", newName)
        }
    }


    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }
    packagingOptions {
        doNotStrip "**/*.so"
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    implementation 'com.anjlab.android.iab.v3:library:1.0.44'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-messaging:15.0.0'
    implementation 'com.google.firebase:firebase-appindexing:15.0.0'
//    implementation 'com.github.katoro:typekit:1.0.1'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation('com.squareup.okhttp3:okhttp') {
        version { strictly '3.12.0' }
    }

    implementation project(path: ':mlAPI')

    // glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'

    // 필수 권한 팝업
    implementation 'com.karumi:dexter:6.2.1'

    // qr
    implementation 'com.journeyapps:zxing-android-embedded:4.1.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'

    // beacon
    implementation files('libs/LimeIndoorSdk.jar')
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}